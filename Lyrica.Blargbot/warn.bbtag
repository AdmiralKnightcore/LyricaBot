{exec;import_utils}
{if;{logic;!;{ismod;{userid}}};{return}}

{if;{args};==;{null};
    You have to tell me who to warn! Use `b!warn help` for more info.
    {return}
}

{set;~muteRole;{get;_muteRole}}

{set;~hearts;{j;[
    {
        "role": "728903243035443251",
        "health": 4,
        "muteLength": "None",
        "punishments": {
            "mute": false,
            "kick": false,
            "ban": false
        },
        "color": "#16C60C"
    },
    {
        "role": "728903246294548532",
        "health": 3,
        "muteLength": "5m",
        "punishments": {
            "mute": true,
            "kick": false,
            "ban": false
        },
        "color": "#FCE100"
    },
    {
        "role": "728903249129635902",
        "health": 2,
        "muteLength": "12h",
        "punishments": {
            "mute": true,
            "kick": false,
            "ban": false
        },
        "color": "#F7630C"
    },
    {
        "role": "728903250916409425",
        "health": 1,
        "muteLength": "24h",
        "punishments": {
            "mute": true,
            "kick": true,
            "ban": false
        },
        "color": "#E81224"
    },
    {
        "role": "728903408790011914",
        "health": 0,
        "mute": false,
        "muteLength": "None",
        "punishments": {
            "mute": false,
            "kick": false,
            "ban": true
        },
        "color": "#000000"
    }
]}}

{//;Usage: <title> <error>}
{function;throw;
    {set;~embed;
        author.name:{username}#{userdiscrim} ({userid});
        author.icon_url:{useravatar};
        title:An error has occured on "{params;0}";
        description:{params;1};
        timestamp:{time};
        color:red
    }

    {if;{func.?;{get;~user}};
        {push;~embed;
            footer.text:{username;{get;~user}}#{userdiscrim;{get;~user}} ({userid;{get;~user}});
            footer.icon_url:{useravatar;{get;~user}}
        }
    }

    {output;{embed;{apply;embedbuild;{get;~embed}}}}
    {return}
}

{//;Usage: <count>}
{function;getHeart;
    {func.??;
        {jget;~hearts;{parseint;{params;0}}};
        {jget;~hearts;1}
    }
}

{//;Usage: <user> <warnings>}
{function;setHeart;
    {set;~user;{params;0}}
    {set;~warnings;{params;1}}
    {set;~heart;{func.getHeart;{get;~warnings}}}

    {if;{logic;!;{userhasrole;{jget;~heart;role};{get;~user}}};
        {foreach;~role;~hearts;
            {if;{userhasrole;{jget;~role;role};{get;~user}};
                {removerole;{jget;~role;role};{get;~user}}}
        }
        {addrole;{func.??;{jget;~heart;role};{get;~hearts;0.role}};{get;~user}}
    }
}

{//;Usage: <user> <count>}
{function;getWarnings;{math;+;{warnings;{params;0}};{params;1}}}

{//;Usage: <user> <count> [dm]}
{function;getDescription;
    {set;~user;{params;0}}
    {set;~count;{parseint;{params;1}}}
    {set;~dm;{bool;{params;2};==;true}}
    {set;~warnings;{func.getWarnings;{get;~user};{get;~count}}}
    {set;~heart;{func.getHeart;{get;~warnings}}}
    {ui;
        {usermention;{get;~user}} you have been warned{if;{get;~count};>;1;{space}{get;~count} times}. You now have {get;~warnings} warnings. You have {if;{get;~dm};{jget;~heart;health};{rolemention;{jget;~heart;role}}} hearts left!

        {switch;true;
            {jget;~heart;punishments.kick};
            {ui;
                **You have been kicked from the server.**
                {if;{jget;~heart;punishments.mute};
                    If you rejoin, you will also be muted for {jget;~heart;muteLength}.}
            };
            {jget;~heart;punishments.ban};**You have been banned from the server.**;
            {jget;~heart;punishments.mute};**You have also been muted for {jget;~heart;muteLength}.**
        }
    }
}

{//;Usage: <user> [reason] [count]}
{function;dmUser;
    {set;~user;{params;0}}

    {set;~reason;{func.??;{params;1};You were warned for breaking the rules.}}
    {set;~count;{func.??;{params;2};1}}

    {set;~warnings;{func.getWarnings;{get;~user};{get;~count}}}
    {set;~heart;{func.getHeart;{get;~warnings}}}

    {debug;DMing `{get;~user}` for reason `{get;~reason}`}

    {if;{func.?;{get;~user}};
        {func.throw;dmUser;There was no user provided}}

    {set;~embed;
        title:You have recieved a warning;
        description:{func.getDescription;{get;~user};{get;~count};true};

        author.name:{username}#{userdiscrim};
        author.icon_url:{useravatar};

        color:{jget;~heart;color};

        footer.icon_url:{guildicon};
        footer.text:{guildname};
        timestamp:{time};

        fields.name:Reason;
        fields.value:{get;~reason};
        fields.inline:true;

        fields.name:Amount;
        fields.value:
        {ui;
            Assinged: **{get;~count}**
            Total: **{get;~warnings}**
        };
        fields.inline:true;
    }

    {if;{jget;~heart;punishments.mute};
        {push;~embed;
            fields.name:Mute;
            fields.value:Length: **{jget;~heart;muteLength}**;
            fields.inline:true
        }
    }

    {dm;{get;~user};{apply;embedbuild;{get;~embed}}}
}

{//;Usage: <user> [length]}
{function;muteUser;
    {set;~user;{params;0}}
    {set;~length;{params;1}}

    {debug;Muting `{get;~user}` for `{get;~length}`}

    {void;{roleadd;{get;_muteRole};{get;~user}}}
    {if;{func.!?;{get;~length}};
        {timer;{void;{roleremove;{get;_muteRole};{get;~user}}};{get;~length}}}
}

{//;Usage: <user> [reason] [count]}
{function;warn;
    {set;~user;{params;0}}

    {set;~reason;{params;1}}
    {set;~count;{abs;{parseint;{func.??;{params;2};1}}}}

    {if;{func.?;{params;0}};
        {func.throw;warn;A user was not provided}}
    {if;{get;~count};==;NaN;
        {func.throw;warn;The count provided was invalid}}

    {set;~warnings;{func.getWarnings;{get;~user};{get;~count}}}

    {//; Override mute length }
    {if;{flagset;t};
        {jset;~hearts;{get;~warnings}.muteLength;{flag;t};c}}

    {func.setHeart;{get;~user};{get;~warnings}}
    {set;~heart;{func.getHeart;{get;~user}}}

    {//; Muting User }
    {if;{flagset;m};
        {jset;~hearts;{get;~warnings}.punishments.mute;false;c};
        {if;{jget;~heart;punishments.mute};
            {func.muteUser;{get;~user};{jget;~heart;muteLength}}}
    }

    {//; DMing User }
    {if;{logic;!;{flagset;d}};
        {func.dmUser;{get;~user};{flag;r};{flag;c};{flag;a}}}

    {//; Output }
    {send;{channelid};{embedbuild;
        color:{jget;~heart;color};

        footer.text:{username}#{userdiscrim} ({userid});
        footer.icon_url:{useravatar};
        timestamp:{time};

        description:{func.getDescription;{get;~user};{get;~count}}
    }}

    {//; Actually warning the user }
    {warn;{get;~user};{get;~count};{if;{func.!?;{get;~reason}};**[ {username}#{userdiscrim} ]**: {get;~reason}}}

    {timer;
        {func.setHeart;{get;~user};
            {pardon;{get;~user};{get;~count};
                {ui;
                    Warning has expired.
                    Original reason: {get;~reason}
                }
            }
        };
        21d
    }
}

{function;help;
    {embed;{embedbuild;
        description:Usage: `b!warn <user> [flags]`;
        color:{exec;ecolor};
        footer.text:{username}#{userdiscrim};
        footer.icon_url:{useravatar};
        timestamp:{time};
        fields.name:Flags;
        fields.value:
        {ui;
            `-r` **[Reason]** The reason for the warn. Please always provide a reason if you can!
            `-c` **[Count]** The number of warnings that will be issued. Use more warnings if it's in a short span, or if it's a repeat offense. It depends on the situation.
            `-d` **[No DM]** This will not DM the user of their warning. Use only if you need to.
            `-m` **[No Mute]** This will not Mute the user from their warning.
            `-t` **[Set Time]** This overrides the length of the mute and mutes them with this length. `1 day 2 hours 3 minutes and 4 seconds`, `1d2h3m4s`, or some other combination.
        };
        fields.name:Usage Examples;
        fields.value:
        {ui;
            `b!warn @user -r Did a bad thing` The pattern that you'll most likely use. This is one warning.

            **Examples**:
            `b!warn @user -c 2 -r Did a really bad thing`
            `b!warn @user -r Alt account -d`
            `b!warn @user -r Minor Misconduct -m`
        };
        fields.name:Warning Reprimands;
        fields.value:
        {ui;
            The amount of life is determined by the amount of warns.
            1 Warning is removed every **3 weeks**. This can be checked by yourself when the system is done.

            <@&728903243035443251> Normal. This is the default amount.
            <@&728903246294548532> **5 minutes mute.**
            <@&728903249129635902> **12 hours mute.**
            <@&728903250916409425> **Kick + 24 hours mute** when rejoining.
            0 hearts **Ban**
        }
    }}
}

{if;{flagset;i};{return;false}}

{switch;{lower;{args;0}};
    ["{null}", "help"];{func.help};
    {void;{func.warn;{flag;_};{flag;r};{flag;c}}}
}